name: 'Create release candidate'

on:
  push:
    branches: [release/*]

env:
  CACHE_NAME: 'CACHE_NODE_MODULES'
  NODE_VERSION: '12.x'

jobs:
  deploy-rc-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
      - uses: fregante/setup-git-user@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: expo/expo-github-action@v6
        with:
          expo-version: 4.x
          token: ${{ secrets.EXPO_TOKEN }}
          expo-cache: true 
      - name: 'Get yarn cache path'
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV
      - uses: actions/cache@v2
        with:
          path: ${{ env.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-   
            ${{ runner.os }}-build- 
            ${{ runner.os }}-
      - name: 'Install packages'
        run: yarn --frozen-lockfile --prefer-offline
      - name: 'Validate typings'
        run: yarn tsc
      - name: 'Test'
        run: yarn test:ci
      - name: Bump version
        run: yarn prerelease --skip.commit
      - name: Get latest version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: Push tags
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.get-latest-tag.outputs.tag }}
          message: '${{ steps.get-latest-tag.outputs.tag }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ steps.get-latest-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Release to RC'
        run: expo publish --non-interactive --release-channel rc
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          pr_title: 'release: next release into master'
          pr_body: ':crown: *Automated PR for release candidate*'
          pr_label: 'auto-pr'
          github_token: ${{ secrets.GITHUB_TOKEN }}
